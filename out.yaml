Attempting to fetch secret credentials from SSM parameter store...
operation error SSM: GetParameter, failed to resolve service endpoint, an AWS region is required, but was not found
User Pool reference ARN: [0xc0000b4700]
User Pool Client Resource: [0xc0000b4a10]
DynamoDB resource: [0xc0000b4d20]
SignupRole resource: [0xc0000f3620]
Resources:
  symphonaidbtbl28963D55:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: PartitionKey
          KeyType: HASH
        - AttributeName: SortKey
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PartitionKey
          AttributeType: S
        - AttributeName: SortKey
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-dbtbl/Resource
  symphonaiuserpool:
    Type: AWS::Cognito::UserPool
    Properties:
      AutoVerifiedAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: email
          Required: true
        - AttributeDataType: String
          Mutable: true
          Name: name
          Required: false
      UserPoolName: symphonai-user-pool
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-user-pool
  SymphonAIUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: symphonaiuserpool
    Metadata:
      aws:cdk:path: BackendServerlessStack/SymphonAIUserPoolClient
  symphonaiapi9222467B:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - https://symphon.ai
      Name: symphonai-api
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/Resource
  symphonaiapiDefaultStage02EFB691:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: symphonaiapi9222467B
      StageName: $default
      AutoDeploy: true
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/DefaultStage/Resource
  symphonaiapiANYpromptPromptIntegration0A9E5F5D:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: symphonaiapi9222467B
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - prompthandlerAC803940
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--prompt/PromptIntegration/Resource
  symphonaiapiANYpromptPromptIntegrationPermissionFE811727:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - prompthandlerAC803940
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-southeast-2:349564020337:"
            - Ref: symphonaiapi9222467B
            - /*/*/prompt
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--prompt/PromptIntegration-Permission
  symphonaiapiANYprompt3FEBFB3C:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: symphonaiapi9222467B
      RouteKey: ANY /prompt
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: symphonaiapiANYpromptPromptIntegration0A9E5F5D
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--prompt/Resource
  symphonaiapiANYsignupSignupIntegrationFBA7EF34:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: symphonaiapi9222467B
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - signuphandler059CED7D
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--signup/SignupIntegration/Resource
  symphonaiapiANYsignupSignupIntegrationPermission826B3918:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - signuphandler059CED7D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-southeast-2:349564020337:"
            - Ref: symphonaiapi9222467B
            - /*/*/signup
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--signup/SignupIntegration-Permission
  symphonaiapiANYsignupCE283AF5:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: symphonaiapi9222467B
      RouteKey: ANY /signup
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: symphonaiapiANYsignupSignupIntegrationFBA7EF34
    Metadata:
      aws:cdk:path: BackendServerlessStack/symphonai-api/ANY--signup/Resource
  prompthandlerServiceRole4337A5EF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: BackendServerlessStack/prompt-handler/ServiceRole/Resource
  prompthandlerAC803940:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99S3BucketD3DFE85C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99S3VersionKeyC5BEEBB1
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99S3VersionKeyC5BEEBB1
      Role:
        Fn::GetAtt:
          - prompthandlerServiceRole4337A5EF
          - Arn
      Handler: bootstrap
      MemorySize: 128
      Runtime: provided.al2
    DependsOn:
      - prompthandlerServiceRole4337A5EF
    Metadata:
      aws:cdk:path: BackendServerlessStack/prompt-handler/Resource
      aws:asset:path: asset.ce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99
      aws:asset:is-bundled: true
      aws:asset:property: Code
  signuplambdarole887D7BC5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: BackendServerlessStack/signup-lambda-role/Resource
  signuprolepolicy03311B65:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "*"
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - symphonaidbtbl28963D55
                  - Arn
              - Fn::GetAtt:
                  - symphonaiuserpool
                  - Arn
              - Ref: SymphonAIUserPoolClient
        Version: "2012-10-17"
      PolicyName: signup-role-policy
      Roles:
        - Ref: signuplambdarole887D7BC5
    Metadata:
      aws:cdk:path: BackendServerlessStack/signup-role-policy/Resource
  signuphandler059CED7D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2S3BucketB9AD6F4C
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2S3VersionKeyCD3C9875
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2S3VersionKeyCD3C9875
      Role:
        Fn::GetAtt:
          - signuplambdarole887D7BC5
          - Arn
      Environment:
        Variables:
          COGNITO_USER_POOL_CLIENT_ID: SymphonAIUserPoolClient
          COGNITO_USER_POOL_ID: symphonai-user-pool
          DYNAMODB_TABLE_NAME:
            Ref: symphonaidbtbl28963D55
      Handler: bootstrap
      MemorySize: 128
      Runtime: provided.al2
    DependsOn:
      - signuplambdarole887D7BC5
    Metadata:
      aws:cdk:path: BackendServerlessStack/signup-handler/Resource
      aws:asset:path: asset.2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2
      aws:asset:is-bundled: true
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11QyWrDMBD9ltxVZaX3JNDlFtz2bMbyVExsaYI0rjHG/15LTqD09JZ5zNNoq3ebvd6sHHs2daPHDwHTKOhjOdaDB8d1pcdPqFpU52+fyaQMW0/Cepytr4jhwtyqP/zcEnqZFNzIgmAPw89Oj28it+ONUjBBknObzYsXkqyCO1nYuxe0AYTYp8g/mXOTasFVNeSXXDA4ivE+f+m8SdlHpLSsX/nhKgKnx4KXszJeuCUzJLmwScV9CTGiRH1MMGt96kyDcoI4VxcYuQsGVZ6mC8hbdWYfJXRG8iYI4FAw5JZ7flKWt/O/68O6htCTX4Ornw+rayR6Cp0XcqiLBX8BCLTnPaABAAA=
    Metadata:
      aws:cdk:path: BackendServerlessStack/CDKMetadata/Default
Parameters:
  AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99S3BucketD3DFE85C:
    Type: String
    Description: S3 bucket for asset "ce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99"
  AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99S3VersionKeyC5BEEBB1:
    Type: String
    Description: S3 key for asset version "ce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99"
  AssetParametersce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99ArtifactHash9121CFF5:
    Type: String
    Description: Artifact hash for asset "ce09a0c304c9b9a25f371f3d8fb98b53698b53d70f52a6def80cda10e2bc5c99"
  AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2S3BucketB9AD6F4C:
    Type: String
    Description: S3 bucket for asset "2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2"
  AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2S3VersionKeyCD3C9875:
    Type: String
    Description: S3 key for asset version "2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2"
  AssetParameters2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2ArtifactHashD0D4471A:
    Type: String
    Description: Artifact hash for asset "2598108e3f54d6aae2d35547ee2ca2fc7ae225ba9e2261d21337bb792b73cbd2"

